# Add the regression line from the GLM model
abline(GLM.6, col = "red", lwd = 2)
# Add a legend
legend("topright", legend = c("Data Points", "Highlighted Linfen", "Regression Line"),
col = c("green", "blue", "red"), pch = c(19, 19, NA), lwd = c(NA, NA, 2))
# Assume you want to highlight the point where Income Level is 50
highlight_point <- 74.01
# Create a color vector that colors all points blue, except for the one you want to highlight
colors <- ifelse(xcy$Life.Expectancy == highlight_point, "blue", "green")
# Plot the data points with the custom color vector
plot(xcy$PM2.5, xcy$Life.Expectancy,
xlab = "Health Literacy level (%)",
ylab = "Life Expectancy(Years)",
main = "Relationship between Life Expectancy and Health Literacy Level",
pch = 19, col = colors)
# Add the regression line from the GLM model
abline(GLM.13, col = "red", lwd = 2)
# Add a legend
legend("topright", legend = c("Data Points", "Highlighted Linfen", "Regression Line"),
col = c("green", "blue", "red"), pch = c(19, 19, NA), lwd = c(NA, NA, 2))
library(Rcmdr)   #load the Rcmdr package
library(effects) #load the effects package
library(nnet)    #load the nnet package (necessary for multinomial loglinear models)
library(MASS)    #load the MASS package (necessary for the proportional-odds regression model)
GLM.15 <- glm(Income.Level ~ Health.literacy.level.., family=gaussian(identity), data=xcy)
summary(GLM.15)
exp(coef(GLM.15))  # Exponentiated coefficients ("odds ratios")
# Assume you want to highlight the point where Income Level is 50
highlight_point <- 29261
# Create a color vector that colors all points blue, except for the one you want to highlight
colors <- ifelse(xcy$Income.Level == highlight_point, "blue", "green")
# Plot the data points with the custom color vector
plot(xcy$PM2.5, xcy$Life.Expectancy,
xlab = "Health Literacy level (%)",
ylab = "Income (Yuan)",
main = "Relationship between Life Expectancy and Health Literacy Level",
pch = 19, col = colors)
# Add the regression line from the GLM model
abline(GLM.13, col = "red", lwd = 2)
# Add a legend
legend("topright", legend = c("Data Points", "Highlighted Linfen", "Regression Line"),
col = c("green", "blue", "red"), pch = c(19, 19, NA), lwd = c(NA, NA, 2))
# Assume you want to highlight the point where Income Level is 50
highlight_point <- 29261
# Create a color vector that colors all points blue, except for the one you want to highlight
colors <- ifelse(xcy$Income.Level == highlight_point, "blue", "green")
# Plot the data points with the custom color vector
plot(xcy$PM2.5, xcy$Life.Expectancy,
xlab = "Health Literacy level (%)",
ylab = "Income (Yuan)",
main = "Relationship between Income and Health Literacy Level",
pch = 19, col = colors)
# Add the regression line from the GLM model
abline(GLM.15, col = "red", lwd = 2)
# Add a legend
legend("topright", legend = c("Data Points", "Highlighted Linfen", "Regression Line"),
col = c("green", "blue", "red"), pch = c(19, 19, NA), lwd = c(NA, NA, 2))
# Assume you want to highlight the point where Income Level is 50
highlight_point <- 29261
# Create a color vector that colors all points blue, except for the one you want to highlight
colors <- ifelse(xcy$Income.Level == highlight_point, "blue", "green")
# Plot the data points with the custom color vector
plot(xcy$Income.Level, xcy$Life.Expectancy,
xlab = "Health Literacy level (%)",
ylab = "Income (Yuan)",
main = "Relationship between Income and Health Literacy Level",
pch = 19, col = colors)
# Add the regression line from the GLM model
abline(GLM.15, col = "red", lwd = 2)
# Add a legend
legend("topright", legend = c("Data Points", "Highlighted Linfen", "Regression Line"),
col = c("green", "blue", "red"), pch = c(19, 19, NA), lwd = c(NA, NA, 2))
# Assume you want to highlight the point where Income Level is 50
highlight_point <- 74.01
# Create a color vector that colors all points blue, except for the one you want to highlight
colors <- ifelse(xcy$Life.Expectancy == highlight_point, "blue", "green")
# Plot the data points with the custom color vector
plot(xcy$Health.literacy.level.., xcy$Life.Expectancy,
xlab = "Health Literacy level (%)",
ylab = "Life Expectancy(Years)",
main = "Relationship between Life Expectancy and Health Literacy Level",
pch = 19, col = colors)
# Add the regression line from the GLM model
abline(GLM.13, col = "red", lwd = 2)
# Add a legend
legend("topright", legend = c("Data Points", "Highlighted Linfen", "Regression Line"),
col = c("green", "blue", "red"), pch = c(19, 19, NA), lwd = c(NA, NA, 2))
# Assume you want to highlight the point where Income Level is 50
highlight_point <- 29261
# Create a color vector that colors all points blue, except for the one you want to highlight
colors <- ifelse(xcy$Income.Level == highlight_point, "blue", "green")
# Plot the data points with the custom color vector
plot(xcy$Health.literacy.level.., xcy$Income.Level,
xlab = "Health Literacy level (%)",
ylab = "Income (Yuan)",
main = "Relationship between Income and Health Literacy Level",
pch = 19, col = colors)
# Add the regression line from the GLM model
abline(GLM.15, col = "red", lwd = 2)
# Add a legend
legend("topright", legend = c("Data Points", "Highlighted Linfen", "Regression Line"),
col = c("green", "blue", "red"), pch = c(19, 19, NA), lwd = c(NA, NA, 2))
library(Rcmdr)   #load the Rcmdr package
library(effects) #load the effects package
library(nnet)    #load the nnet package (necessary for multinomial loglinear models)
library(MASS)    #load the MASS package (necessary for the proportional-odds regression model)
GLM.16 <- glm(Unemployment.Rate ~ Life.Expectancy, family=gaussian(identity), data=xcy)
summary(GLM.16)
exp(coef(GLM.16))  # Exponentiated coefficients ("odds ratios")
# Assume you want to highlight the point where Income Level is 50
highlight_point <- 29261
# Create a color vector that colors all points blue, except for the one you want to highlight
colors <- ifelse(xcy$Income.Level == highlight_point, "blue", "green")
# Plot the data points with the custom color vector
plot(xcy$Life.Expectancy, xcy$Unemployment.Rate,
xlab = "Unemployment Rate (%)",
ylab = "Life Expectancy (Years)",
main = "Relationship between Life Expectancy and Unemployment rate",
pch = 19, col = colors)
# Add the regression line from the GLM model
abline(GLM.16, col = "red", lwd = 2)
# Add a legend
legend("topright", legend = c("Data Points", "Highlighted Linfen", "Regression Line"),
col = c("green", "blue", "red"), pch = c(19, 19, NA), lwd = c(NA, NA, 2))
# Assume you want to highlight the point where Income Level is 50
highlight_point <- 29261
# Create a color vector that colors all points blue, except for the one you want to highlight
colors <- ifelse(xcy$Income.Level == highlight_point, "blue", "green")
# Plot the data points with the custom color vector
plot(xcy$Unemployment.Rate, xcy$Life.Expectancy,
xlab = "Unemployment Rate (%)",
ylab = "Life Expectancy (Years)",
main = "Relationship between Life Expectancy and Unemployment rate",
pch = 19, col = colors)
# Add the regression line from the GLM model
abline(GLM.16, col = "red", lwd = 2)
# Add a legend
legend("topright", legend = c("Data Points", "Highlighted Linfen", "Regression Line"),
col = c("green", "blue", "red"), pch = c(19, 19, NA), lwd = c(NA, NA, 2))
# Assume you want to highlight the point where Income Level is 50
highlight_point <- 29261
# Create a color vector that colors all points blue, except for the one you want to highlight
colors <- ifelse(xcy$Income.Level == highlight_point, "blue", "green")
# Plot the data points with the custom color vector
plot(xcy$Unemployment.Rate, xcy$Life.Expectancy,
xlab = "Unemployment Rate (%)",
ylab = "Life Expectancy (Years)",
main = "Relationship between Life Expectancy and Unemployment rate",
pch = 19, col = colors)
# Add the regression line from the GLM model
abline(GLM.16, col = "red", lwd = 2)
# Add a legend
legend("topright", legend = c("Data Points", "Highlighted Linfen", "Regression Line"),
col = c("green", "blue", "red"), pch = c(19, 19, NA), lwd = c(NA, NA, 2))
# Assume you want to highlight the point where Income Level is 50
highlight_point <- 29261
# Create a color vector that colors all points blue, except for the one you want to highlight
colors <- ifelse(xcy$Income.Level == highlight_point, "blue", "green")
# Plot the data points with the custom color vector
plot(xcy$Life.Expectancy, xcy$Unemployment.Rate,
xlab = "Life Expectancy (Years)",
ylab = "Unemployment Rate (%)",
main = "Relationship between Life Expectancy and Unemployment rate",
pch = 19, col = colors)
# Add the regression line from the GLM model
abline(GLM.16, col = "red", lwd = 2)
# Add a legend
legend("topright", legend = c("Data Points", "Highlighted Linfen", "Regression Line"),
col = c("green", "blue", "red"), pch = c(19, 19, NA), lwd = c(NA, NA, 2))
library(Rcmdr)   #load the Rcmdr package
library(effects) #load the effects package
library(nnet)    #load the nnet package (necessary for multinomial loglinear models)
library(MASS)    #load the MASS package (necessary for the proportional-odds regression model)
GLM.17 <- glm(Life.Expectancy ~ Health.literacy.level.. + Income.Level, family=gaussian(identity), data=xcy)
summary(GLM.17)
exp(coef(GLM.17))  # Exponentiated coefficients ("odds ratios")
# Load necessary libraries
library(car)
# Fit the GLM with interaction term
model <- glm(Life.Expantancy ~ Income.Level * `Health literacy level %`,
family = gaussian(link = "identity"),
data = data)
# Load necessary libraries
library(car)
# Fit the GLM with interaction term
model <- glm(Life.Expantancy ~ Income.Level * ` Health.literacy.level..`,
family = gaussian(link = "identity"),
data = data)
# Load necessary libraries
library(car)
# Fit the GLM with interaction term
model <- glm(Life.Expantancy ~ Income.Level * Health.literacy.level..,
family = gaussian(link = "identity"),
data = data)
# Load necessary libraries
library(car)
# Fit the GLM with interaction term
model <- glm(Life.Expantancy ~ Income.Level * Health.literacy.level..,
family = gaussian(link = "identity"),
data = data)
# Load necessary library
library(ggplot2)
# Create a scatter plot of Income Level vs. Life Expectancy with a color gradient for Health Literacy Level
ggplot(xcy, aes(x = Income.Level, y = Life.Expectancy, color = Health.literacy.level..)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = FALSE) +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Combined Effect of Income Level and Health Literacy on Life Expectancy",
x = "Income Level",
y = "Life Expectancy",
color = "Health Literacy Level (%)") +
theme_minimal()
# Load necessary library
library(ggplot2)
# Create a scatter plot of Income Level vs. Life Expectancy with a color gradient for Health Literacy Level
ggplot(xcy, aes(x = Income.Level, y = Life.Expectancy, color = Health.literacy.level..)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = FALSE) +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Combined Effect of Income Level and Health Literacy on Life Expectancy",
x = "Income Level",
y = "Life Expectancy",
color = "Health Literacy Level (%)") +
theme_minimal()
library(Rcmdr)   #load the Rcmdr package
library(effects) #load the effects package
library(nnet)    #load the nnet package (necessary for multinomial loglinear models)
library(MASS)    #load the MASS package (necessary for the proportional-odds regression model)
GLM.18 <- glm(Life.Expectancy ~ Income.Level + Population.Density + Unemployment.Rate, family=gaussian(identity), data=xcy)
summary(GLM.18)
exp(coef(GLM.18))  # Exponentiated coefficients ("odds ratios")
# Load necessary libraries
library(effects)
library(ggplot2)
# Calculate effects for the model
eff <- allEffects(GLM.18)
# Convert the effects to a data frame for easy plotting
eff_df <- as.data.frame(eff)
# Plot the effects on one graph
ggplot() +
geom_line(data = eff_df[eff_df$Effect == "Income.Level",], aes(x = Income.Level, y = fit, color = "Income Level"), size = 1) +
geom_line(data = eff_df[eff_df$Effect == "Population.Density",], aes(x = Population.Density, y = fit, color = "Population Density"), size = 1) +
geom_line(data = eff_df[eff_df$Effect == "Unemployment.Rate",], aes(x = Unemployment.Rate, y = fit, color = "Unemployment Rate"), size = 1) +
labs(title = "Effect of Income Level, Population Density, and Unemployment Rate on Life Expectancy",
x = "Predictors",
y = "Life Expectancy",
color = "Predictors") +
theme_minimal() +
theme(legend.position = "bottom")
# Load necessary libraries
library(effects)
library(ggplot2)
# Calculate effects for the model
eff <- allEffects(GLM.18)
# Convert the effects to a data frame for easy plotting
eff_df <- as.data.frame(eff)
# Plot the effects on one graph
ggplot() +
geom_line(data = eff_df[eff_df$Effect == "Income,Level",], aes(x = Income.Level, y = fit, color = "Income Level"), size = 1) +
geom_line(data = eff_df[eff_df$Effect == "Population.Density",], aes(x = Population.Density, y = fit, color = "Population Density"), size = 1) +
geom_line(data = eff_df[eff_df$Effect == "Unemployment.Rate",], aes(x = Unemployment.Rate, y = fit, color = "Unemployment Rate"), size = 1) +
labs(title = "Effect of Income Level, Population Density, and Unemployment Rate on Life Expectancy",
x = "Predictors",
y = "Life Expectancy",
color = "Predictors") +
theme_minimal() +
theme(legend.position = "bottom")
# Load necessary libraries
library(effects)
library(ggplot2)
# Calculate effects for the model
eff <- allEffects(GLM.18)
# Convert the effects to a data frame for easy plotting
eff_df <- as.data.frame(eff)
# Plot the effects on one graph
ggplot() +
geom_line(data = eff_df[eff_df$Effect == "Income.Level",], aes(x = Income.Level, y = fit, color = "Income Level"), size = 1) +
geom_line(data = eff_df[eff_df$Effect == "Population.Density",], aes(x = Population.Density, y = fit, color = "Population Density"), size = 1) +
geom_line(data = eff_df[eff_df$Effect == "Unemployment.Rate",], aes(x = Unemployment.Rate, y = fit, color = "Unemployment Rate"), size = 1) +
labs(title = "Effect of Income Level, Population Density, and Unemployment Rate on Life Expectancy",
x = "Predictors",
y = "Life Expectancy",
color = "Predictors") +
theme_minimal() +
theme(legend.position = "bottom")
# Load necessary libraries
library(effects)
library(ggplot2)
# Calculate individual effects for each predictor
effect_income <- Effect("Income.Level", GLM.18)
effect_population <- Effect("Population.Density", GLM.18)
effect_unemployment <- Effect("Unemployment.Rate", GLM.18)
# Convert effects to data frames
df_income <- as.data.frame(effect_income)
df_population <- as.data.frame(effect_population)
df_unemployment <- as.data.frame(effect_unemployment)
# Combine the data frames into one, adding a column to differentiate them
df_income$Predictor <- "Income Level"
df_population$Predictor <- "Population Density"
df_unemployment$Predictor <- "Unemployment Rate"
# Combine all data frames into one for plotting
combined_df <- rbind(df_income, df_population, df_unemployment)
# Load necessary libraries
library(effects)
library(ggplot2)
# Calculate the effects for each predictor
effect_income <- Effect("Income.Level", GLM.18)
effect_population <- Effect("Population.Density", GLM.18)
effect_unemployment <- Effect("Unemployment.Rate", GLM.18)
# Convert the effects to data frames
df_income <- as.data.frame(effect_income)
df_population <- as.data.frame(effect_population)
df_unemployment <- as.data.frame(effect_unemployment)
# Add a 'Predictor' column to each data frame
df_income$Predictor <- "Income Level"
df_population$Predictor <- "Population Density"
df_unemployment$Predictor <- "Unemployment Rate"
# Combine the data frames
combined_df <- rbind(
df_income[, c("Income.Level", "fit", "se.fit", "Predictor")],
df_population[, c("Population.Density", "fit", "se.fit", "Predictor")],
df_unemployment[, c("Unemployment.Rate", "fit", "se.fit", "Predictor")]
)
# Load necessary libraries
library(effects)
library(ggplot2)
library(dplyr)
# Calculate the effects for each predictor
effect_income <- Effect("Income.Level", GLM.18)
effect_population <- Effect("Population.Density", GLM.18)
effect_unemployment <- Effect("Unemployment.Rate", GLM.18)
# Convert effects to data frames
df_income <- as.data.frame(effect_income)
df_population <- as.data.frame(effect_population)
df_unemployment <- as.data.frame(effect_unemployment)
# Ensure the columns are consistent across all data frames
df_income <- df_income %>%
mutate(Predictor = "Income Level", PredictorValue = Income.Level) %>%
select(Predictor, PredictorValue, fit, se.fit)
# Load necessary libraries
library(effects)
library(ggplot2)
library(dplyr)
# Calculate the effects for each predictor
effect_income <- Effect("Income.Level", GLM.18)
effect_population <- Effect("Population.Density", GLM.18)
effect_unemployment <- Effect("Unemployment.Rate", GLM.18)
# Convert effects to data frames
df_income <- as.data.frame(effect_income)
df_population <- as.data.frame(effect_population)
df_unemployment <- as.data.frame(effect_unemployment)
# Ensure the columns are consistent across all data frames
df_income <- df_income %>%
mutate(Predictor = "Income Level", PredictorValue = Income.Level) %>%
select(Predictor, PredictorValue, fit, se.fit)
# Load necessary libraries
library(effects)
library(ggplot2)
library(dplyr)
# Calculate the effects for each predictor
effect_income <- Effect("Income.Level", GLM.18)
effect_population <- Effect("Population.Density", GLM.18)
effect_unemployment <- Effect("Unemployment.Rate", GLM.18)
# Convert effects to data frames
df_income <- as.data.frame(effect_income)
df_population <- as.data.frame(effect_population)
df_unemployment <- as.data.frame(effect_unemployment)
# Check the structure of the data frames
str(df_income)
str(df_population)
str(df_unemployment)
# Ensure the columns are consistent across all data frames
df_income <- df_income %>%
rename(PredictorValue = Income.Level) %>%
mutate(Predictor = "Income Level") %>%
select(Predictor, PredictorValue, fit, se.fit)
# Load necessary libraries
library(effects)
library(ggplot2)
# Fit the model
GLM.18 <- glm(Life.Expectancy ~ Income.Level + Population.Density + Unemployment.Rate,
family = gaussian(identity), data = xcy)
# Calculate the effects
effects_list <- allEffects(GLM.18)
# Plot the effects
plot(effects_list, multiline = TRUE,
main = "Effects of Income Level, Population Density, and Unemployment Rate on Life Expectancy",
xlab = "Predictor Values",
ylab = "Life Expectancy",
colors = c("red", "blue", "green"))
# Load necessary libraries
library(effects)
library(ggplot2)
# Fit the model
GLM.18 <- glm(Life.Expectancy ~ Income.Level + Population.Density + Unemployment.Rate,
family = gaussian(identity), data = xcy)
# Calculate the effects
effects_list <- allEffects(GLM.18)
# Plot the effects
plot(effects_list, multiline = TRUE,
main = "Effects of Income Level, Population Density, and Unemployment Rate on Life Expectancy",
xlab = "Predictor Values",
ylab = "Life Expectancy",
colors = c("red", "blue", "green"))
# Load necessary libraries
library(effects)
library(ggplot2)
# Fit the model
GLM.18 <- glm(Life.Expectancy ~ Income.Level + Population.Density + Unemployment.Rate,
family = gaussian(identity), data = xcy)
# Calculate the effects
effects_list <- allEffects(GLM.18)
# Plot the effects
plot(effects_list, multiline = TRUE,
main = "Effects of Income Level, Population Density, and Unemployment Rate on Life Expectancy",
xlab = "Predictor Values",
ylab = "Life Expectancy",
colors = c("red", "blue", "green"))
# Load necessary libraries
library(effects)
library(ggplot2)
# Fit the model
GLM.18 <- glm(Life.Expectancy ~ Income.Level + Population.Density + Unemployment.Rate,
family = gaussian(identity), data = xcy)
# Calculate the effects
effects_list <- allEffects(GLM.18)
# Plot the effects
plot(effects_list, multiline = TRUE,
main = "...",
xlab = "Predictor Values",
ylab = "Life Expectancy",
colors = c("red", "blue", "green"))
# Load necessary libraries
library(effects)
library(ggplot2)
# Fit the model
GLM.18 <- glm(Life.Expectancy ~ Income.Level + Population.Density + Unemployment.Rate,
family = gaussian(identity), data = xcy)
# Calculate the effects
effects_list <- allEffects(GLM.18)
# Plot the effects
plot(effects_list, multiline = TRUE,
main = "Socioeconomic effect",
xlab = "Predictor Values",
ylab = "Life Expectancy",
colors = c("red", "blue", "green"))
# Load necessary libraries
library(effects)
library(ggplot2)
# Fit the model
GLM.18 <- glm(Life.Expectancy ~ Income.Level + Population.Density + Unemployment.Rate,
family = gaussian(identity), data = xcy)
# Calculate the effects
effects_list <- allEffects(GLM.18)
# Plot the effects
plot(effects_list, multiline = TRUE,
main = "Socioeconomic effect on Life length",
xlab = "Predictor Values",
ylab = "Life Expectancy",
colors = c("red", "blue", "green"))
# Load necessary libraries
library(effects)
library(ggplot2)
# Fit the model
GLM.18 <- glm(Life.Expectancy ~ Income.Level + Population.Density + Unemployment.Rate,
family = gaussian(identity), data = xcy)
# Calculate the effects
effect_income <- Effect("Income.Level", GLM.18)
effect_population <- Effect("Population.Density", GLM.18)
effect_unemployment <- Effect("Unemployment.Rate", GLM.18)
# Convert effects to data frames for ggplot
df_income <- as.data.frame(effect_income)
df_population <- as.data.frame(effect_population)
df_unemployment <- as.data.frame(effect_unemployment)
# Plot Income Level effect
ggplot(df_income, aes(x = Income.Level, y = fit)) +
geom_line(color = "red", size = 1.2) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2, fill = "red") +
labs(title = "Effect of Income Level on Life Expectancy",
x = "Income Level",
y = "Life Expectancy") +
theme_minimal()
# Plot Population Density effect
ggplot(df_population, aes(x = Population.Density, y = fit)) +
geom_line(color = "blue", size = 1.2) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2, fill = "blue") +
labs(title = "Effect of Population Density on Life Expectancy",
x = "Population Density",
y = "Life Expectancy") +
theme_minimal()
# Plot Unemployment Rate effect
ggplot(df_unemployment, aes(x = Unemployment.Rate, y = fit)) +
geom_line(color = "green", size = 1.2) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2, fill = "green") +
labs(title = "Effect of Unemployment Rate on Life Expectancy",
x = "Unemployment Rate",
y = "Life Expectancy") +
theme_minimal()
# Load necessary libraries
library(effects)
library(ggplot2)
# Fit the model
GLM.18 <- glm(Life.Expectancy ~ Income.Level + Population.Density + Unemployment.Rate,
family = gaussian(identity), data = xcy)
# Calculate the effects
effects_list <- allEffects(GLM.18)
# Plot the effects
plot(effects_list, multiline = TRUE,
main = "Socioeconomic effect on Life",
xlab = "Predictor Values",
ylab = "Life Expectancy",
colors = c("red", "blue", "green"))
